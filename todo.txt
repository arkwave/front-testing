

8/3

option class - framework.                         [Done]
futures class - framework.                        [Done]
portfolio class - framework.                      [Done]
black scholes (euro)                              [Done]
computational methods                             [Done]


9/3

moneyness                                         [Done]
securities into options and futures               [Done]
re-testing classes after changes.                 [Done]
exercise option                                   [Done]
convert option underlying into futures object     [Done]
decrement tau                                     [Done]
update documentation                              [Done]
options on futures formula                        [Done]
options class - euro vs amer                      [Done]
options class - s is now underlying.price()       [Done]
simulation - program structure                    [Done]
feed_data - logic                                 [Done]
feed_data - basic implementation				  [Done]
rebalancing - logic                               [Done]



10/3

>>>>>> urgent II : short pos repr <<<<<<          [Done]
data import                                       [Done]
update documentation                              [Done]
tidy up futures class                             [Done]
test portfolio class                              [Done]



13/3
gamma & vega hedging                              [Done]
re-structure dictionaries to incl product         [Done]
Update documentation							  [Done]



14/3
Implement the following based on the matlab pricing code.

american option pricing                           [Done]
vol computation                                   [Done]
barrier option pricing: american                  [Done]



15/3
product specific information dic                  [Done]
update greeks based on lots etc                   [Done]
barrier option greeks : american                  [Done]


barrier option pricing: european                  [Done]
barrier option greeks : european                  [Done]




16/3
Debugging:
3_ options object                                 [Done]
4_ futures object                                 [Done]





17/3:
testing:
1_ all computational methods.                                     
	> vanilla options                             [Done]
	> vanilla greeks                              [Done]
2_ portfolio object                               [Done]



20/3
PRIORITY: Finish testing calc.py
	> American barrier                            [Done]
	> implied volatility                          [Done]
	> Call put spread pricing                     [Done]
	> Call put spread greeks                      [Done]
	> American barrier greeks                     [Done]
delta hedging logic                               [Done]



21/3:
familiarize with data                             [Done]
prep_data steps                                   
	> compute ttm from label for op               [Done]
	> reading in data                             [Done]
	> alter prep_portfolio                        [Done]
	> clean price data                            [Done]
flag indicating target or hedge in readin         [Done]




23/3:
tidy up expiry month for each class per month     [Done]
knockout for european barriers                    [Done]
European barrier                                  [Done]
European barrier greeks                           [Done]
Figure out why vols and 0 and what to do abt that [Done]
fix the nonetype error                            [Done]
documentation for:
	> option                                      [Done]
	> portfolio                                   [Done]
	> prep_data                                   [Done]
	> calc                                        [Done]
write-up                                          [Done]





24/3:

hedge vs otc dichotomy         
	> target : {'product': {'month': 
	    set(options), set(futures, greeks)}}      [Done]
	> hedges: {'product': {'month': 
	    set(options, set(futures), greeks)}}      [Done]
	> adapt compute_net_greeks to take in two 
	random dictionaries instead of hardcoded 
	to self.long and self.short                   [Done]
	> replaced long with OTC                      [Done]
	> replaced short with hedge                   [Done]
	> reflected changes in portfolio_specs        [Done]
	> updated prep_portfolio                      [Done]
	> updated tests                               [Done]


27/3:

Basic stuff:
> getting the right data.                         [Done]

Data processing steps:
> allocating C1 C2 C3 based on front month        [Done]
> add in ordering/month flags in options          [Done]




28/3:

> Not all options in expiry list; N7.Z7 for ex.   [Done]
> Debug all prep functions                        [Done]
> follow up with kishor about expiries            [Done]
> price returns transformations                   [Done]
	> log(curr - prev) taking rollover into acct
> price transformation                            [Done]


29/3
> vol surface difference transformation           [Done]
	> atm_curr - atm_prev 	                      [Done]
	> helper to isolate option ordering mth       [Done]
> selection rollover logic                        [Done]
> selecting vol from vol surface based on strike  [Done]



30/3 [Morning]
> finish indexing vols ci option indexng          [Done]
> testing find_cdist                              [Done]



30/3 [At work]. Priority: finish the CI stuff/testing.
> rollover in price                               [Done]
	> testing                                     [Done]
> fix find_dist and assign ci to take into account   
multiple years.                                   [Done]
	> testing                                     [Done]


31/3
> New task: delta interpolation dataframe.        [Done]
2) testing from xtrader                           [Done]
3) testing for european barrier greeks            []






1/4 (Saturday):

Outstanding: vol/price dumps. gaining access to these mandatory.


1) think about how mapping CI and symbols is gonna  [Half]
happen in options/futures objects, implement 
accordingly.
	2_ use same logic from ciprice to construct     [Done]
	ci vols from vol by delta	            

2) moneyness error.                                 [Done]
	> was a problem with self.active/self.knockedout
	 interaction in options class during 
	 self.moneyness and self.check_active calls.







2/4 (Sunday):

Conceptualize ordering in options/futures.          [Done]
	> testing

	Notes:
		
		1_ ordering in futures: taken care of during read-in, 
		based on current month and the number of contract months between target and current month.
		
		2_ ordering in options: for each given C-i price series, 
		bucket overlying options based on time to expiry (i.e. tau < x = bucket 1, x <= tau <= y = bucket 2, etc.)
		
		> implication: logic to check for which price/vol series 
		to read in should be done in simulation.py, not in any of the classes.
		
		> todo: isolate c_i from readin, which is already being done by read_data. 
		once access to vol/price dump is given, implement get_all_underlying in portfolio to specify the data that is required.
		   - done.
		> during simulation:
			1) for each product, keep track of rollover dates.                  [Done]
			2) if value_date == rollover date, update orderings                 [Done]
			(i.e. decrement ordering for options and futures, discard those        
			options that correspond to ordering 0)

			> related TODOs: 
			1) generate and store rollover dates in sim.py                      [Done]
			2) new active condition (i.e. if cond == 0, inactive, regardless).  [Done]
			3) question: barrier option expiries?                             

 
> isolate distances using get_cdist, pass that into [Done]
underlying.ordering.                                
> updating future and options object with ordering  [Done]




Simulation logic notes:

1) Timestep --> immediately handle expiries/rollovers
2) Feed in price and vol data:
	> price --> knockouts/knockins that changes activity status.
	> price --> change in value of futures and options. 
	> vol --> change in value of option
3) Handle options:
	> daily vs bullet payoff? might not actually be necessary.
4) delta/vega/gamma hedging. 
5) store changes from above 4 steps, figure out how the hell brokerage/lots/multipliers etc factor into PnL calculation.
6) store PnL against run_number --> plot a histogram, and summary statistics. 






3/4 (Monday) :

# Notes:
	> use the regular ci_vols_final dataset to actually update the portfolio. 
	vol_by_delta is purely for database purposes, can later be adapted to portfolio if so desired.
	> currently using Piecewise continuous hermite interpolation (pchip) 
	to interpolate deltas. ensures function and derivative match at those points.

Debugging ci_price                                  [Done]
debugging ci_vol                                    [Done]
resolving imports                                   [Done]
updating documentation in prep_data                 [Done]

### Simulation TODOs: ####
figure out how to check for rollover.               [Done] -> in feed_data
main simulation loop                                [Done] -> notes written.



4/4 (Tuesday):

feed_data                                           
	> timestep --> expiries.                        [Done]
	> rollovers                                     [Done]
	> price --> knockouts/knockins that              
				changes activity status.            [Done]
	
	> price --> change in value of futures          [Done]
	                          and options.          [Done]
	> vol --> change in value of option             [Done]
>> Check: if greeks updated when new price/vols 
	passed in                                       [Done]
>> check if expiry zeros out greeks of options      [Done]
>> check if decrementing ordering has the 
   desired effect                                   [Done] 
>> understand readin process and how tau is 
   computed, in relation to simulation logic  
   as a whole.                                      [Done]
>> vega/gamma hedging                               [Done]




5/4 (Wednesday):
> prep notes, send out tomorrow morning.            [Done]

# Notes:
> discussion with Evert on structure of the code.   [Done]
>> testing: feed_data.                              [Done]
	> tested all constituent components           
		- rollovers                                 [Done]
		- expiries                                  [Done]
		- change in val upon price/vol              [Done]
	> test compute_ordering                         [Done]
> Delta Hedging.                                    [Done]

FFDSDdfsd
dd



6/4 (Thursday):

calc-related work:
> rework calc testing. use exclusively xtrader.     [Done]
> debug euro barrier pricing.                       [Done]
> euro barrier greeks                               [Done]
	> delta [Done]
	> gamma [Done]
	> theta [Done]
	> vega  [Done]
> american barrier greeks                           [all but gamma]
	> delta [Done]
	> theta [Done]
	> vega  [Done]
> rework compute value & testing                    [Done]
> reset ki, barrier etc to none once knockin        [Done]



7/4:
>> testing: gamma/vega hedging                      [] 
>> testing: delta hedging                           []
	- should delta actually get reset to 0?



Pnl calculations.                                    
> bid ask spread for options                        []
> fully understand what is expected.                []
> brokerage in hedging steps                        [Done]
> lots for delta hedging.                           []
> pnl mult                                          []




Handle options: 
> bullet vs daily payoff                            []
> exercise                                          [Done]






Debug gamma calculations                            []
adapt computation for returns/vol change,           []
reading in multiplier list                          []





TODO once dumps are ready:
> generate data requirements from portfolio object  [] -> use get_all_futures.
> finalize database updating stuff. 
> batch script to run the file every day. 











Notes from meeting:

XML instead of text files, read using beautiful soup.

vanna/volga methods for vols. 
high/low prices for barriers
correlation surfaces as inputs
flexible hedging strategies.
accounting for gap risk.

MC Pricing for Barriers:
1) Brownian bridge-based methods.

MC Generation of Price and Vol series:
No idea yet man.




8/3

option class - framework.                         [Done]
futures class - framework.                        [Done]
portfolio class - framework.                      [Done]
black scholes (euro)                              [Done]
computational methods                             [Done]


9/3

moneyness                                         [Done]
securities into options and futures               [Done]
re-testing classes after changes.                 [Done]
exercise option                                   [Done]
convert option underlying into futures object     [Done]
decrement tau                                     [Done]
update documentation                              [Done]
options on futures formula                        [Done]
options class - euro vs amer                      [Done]
options class - s is now underlying.price()       [Done]
simulation - program structure                    [Done]
feed_data - logic                                 [Done]
feed_data - basic implementation				  [Done]
rebalancing - logic                               [Done]



10/3

>>>>>> urgent II : short pos repr <<<<<<          [Done]
data import                                       [Done]
update documentation                              [Done]
tidy up futures class                             [Done]
test portfolio class                              [Done]



13/3
gamma & vega hedging                              [Done]
re-structure dictionaries to incl product         [Done]
Update documentation							  [Done]



14/3
Implement the following based on the matlab pricing code.

american option pricing                           [Done]
vol computation                                   [Done]
barrier option pricing: american                  [Done]



15/3
product specific information dic                  [Done]
update greeks based on lots etc                   [Done]
barrier option greeks : american                  [Done]


barrier option pricing: european                  [Done]
barrier option greeks : european                  [Done]




16/3

3_ options object                                 [Done]
4_ futures object                                 [Done]





17/3:

testing:
1_ all computational methods.                                     
	> vanilla options                             [Done]
	> vanilla greeks                              [Done]
2_ portfolio object                               [Done]


20/3

PRIORITY: Finish testing calc.py
	> American barrier                            [Done]
	> implied volatility                          [Done]
	> Call put spread pricing                     [Done]
	> Call put spread greeks                      [Done]
	> American barrier greeks                     [Done]
delta hedging logic                               [Done]



	


21/3:
familiarize with data                             [Done]
prep_data steps                                   
	> compute ttm from label for op               [Done]
	> reading in data                             [Done]
	> alter prep_portfolio                        [Done]
	> clean price data                            [Done]
flag indicating target or hedge in readin         [Done]




23/3:
tidy up expiry month for each class per month     [Done]
hedge vs otc dichotomy - extract from pos         
	> target : {'product': {'month': 
	    set(options), set(futures, greeks)}}      []
	> hedges: {'product': {'month': 
	    set(options, set(futures), greeks)}}      []
	> adapt compute_net_greeks to take in two 
	random dictionaries instead of hardcoded 
	to self.long and self.short                   []



Other:
European barrier                                  []
European barrier greeks                           []





This/Next Week:
1) remaining simulation logic                     []
2) testing from xtrader                           []




Sri's comments:
compute tau from label                            []
hedge vs otc dichotomy - extract from pos         []
	> add in a flag during read-in
	> target : {'product': {'month': 
	    set(options), set(futures, greeks)}}      []
	> hedges: {'product': {'month': 
	    set(options, set(futures), greeks)}}      []
	> adapt compute_net_greeks to take in two 
	random dictionaries instead of hardcoded 
	to self.long and self.short                   []






Do once the account has been made.
>>>>>>> data-related: <<<<<<<<<<
urgent todo: data familiarization                 []
text file query from database                     []
data transformation 			                  []

>>>>> Simulation Logic: <<<<<<
1) Handle_options                                 []
2) PnL                                            []
3) Clean up feed_data once data format finalized  []









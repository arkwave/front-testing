

8/3

option class - framework.                         [Done]
futures class - framework.                        [Done]
portfolio class - framework.                      [Done]
black scholes (euro)                              [Done]
computational methods                             [Done]


9/3

moneyness                                         [Done]
securities into options and futures               [Done]
re-testing classes after changes.                 [Done]
exercise option                                   [Done]
convert option underlying into futures object     [Done]
decrement tau                                     [Done]
update documentation                              [Done]
options on futures formula                        [Done]
options class - euro vs amer                      [Done]
options class - s is now underlying.price()       [Done]
simulation - program structure                    [Done]
feed_data - logic                                 [Done]
feed_data - basic implementation				  [Done]
rebalancing - logic                               [Done]



10/3

>>>>>> urgent II : short pos repr <<<<<<          [Done]
data import                                       [Done]
update documentation                              [Done]
tidy up futures class                             [Done]
test portfolio class                              [Done]



13/3
gamma & vega hedging                              [Done]
re-structure dictionaries to incl product         [Done]
Update documentation							  [Done]



14/3
Implement the following based on the matlab pricing code.

american option pricing                           [Done]
vol computation                                   [Done]
barrier option pricing: american                  [Done]



15/3
product specific information dic                  [Done]
update greeks based on lots etc                   [Done]
barrier option greeks : american                  [Done]


barrier option pricing: european                  [Done]
barrier option greeks : european                  [Done]




16/3
Debugging:
3_ options object                                 [Done]
4_ futures object                                 [Done]





17/3:
testing:
1_ all computational methods.                                     
	> vanilla options                             [Done]
	> vanilla greeks                              [Done]
2_ portfolio object                               [Done]



20/3
PRIORITY: Finish testing calc.py
	> American barrier                            [Done]
	> implied volatility                          [Done]
	> Call put spread pricing                     [Done]
	> Call put spread greeks                      [Done]
	> American barrier greeks                     [Done]
delta hedging logic                               [Done]



21/3:
familiarize with data                             [Done]
prep_data steps                                   
	> compute ttm from label for op               [Done]
	> reading in data                             [Done]
	> alter prep_portfolio                        [Done]
	> clean price data                            [Done]
flag indicating target or hedge in readin         [Done]




23/3:
tidy up expiry month for each class per month     [Done]
knockout for european barriers                    [Done]
European barrier                                  [Done]
European barrier greeks                           [Done]
Figure out why vols and 0 and what to do abt that [Done]
fix the nonetype error                            [Done]
documentation for:
	> option                                      [Done]
	> portfolio                                   [Done]
	> prep_data                                   [Done]
	> calc                                        [Done]
write-up                                          [Done]





24/3:

hedge vs otc dichotomy         
	> target : {'product': {'month': 
	    set(options), set(futures, greeks)}}      [Done]
	> hedges: {'product': {'month': 
	    set(options, set(futures), greeks)}}      [Done]
	> adapt compute_net_greeks to take in two 
	random dictionaries instead of hardcoded 
	to self.long and self.short                   [Done]
	> replaced long with OTC                      [Done]
	> replaced short with hedge                   [Done]
	> reflected changes in portfolio_specs        [Done]
	> updated prep_portfolio                      [Done]
	> updated tests                               [Done]


27/3:

Basic stuff:
> getting the right data.                         [Done]

Data processing steps:
> allocating C1 C2 C3 based on front month        [Done]
> add in ordering/month flags in options          [Done]




28/3:

> Not all options in expiry list; N7.Z7 for ex.      [Done]
> Debug all prep functions                           [Done]
> follow up with kishor about expiries               [Done]
> price returns transformations                      [Done]
	> log(curr - prev) taking rollover into acct
> price transformation                               [Done]


29/3
> vol surface difference transformation              [Done]
	> atm_curr - atm_prev 	                         [Done]
	> helper to isolate option ordering based on mth [Done]
> selection rollover logic                           [Done]
> selecting vol from vol surface based on strike     [Done]



30/3 [Morning]
> finish indexing vols ci option indexng             [Done]



> selecting vol from vol surface based on delta      [Not required atm]


30/3 [At work]. Priority: finish the CI stuff/testing.
> rollover in price                                  []
> rollover in vol                                    []
> updating future and options object with ordering   []
> generate data requirements from portfolio object   []

2) testing from xtrader                               []
3) testing for european barrier greeks                []
4) testing for european barrier pricing.              []
5) adapt computation for returns and change in vol    []
6) reading in multiplier list                         []

7) that moneyness error.

31/3:
feed_data                                             []
handle_options                                        []


>>>>> Simulation Logic: <<<<<<
1) Handle_options                                     []
2) PnL                                                []
3) Clean up feed_data once data format finalized      []








